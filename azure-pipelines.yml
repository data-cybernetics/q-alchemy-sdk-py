# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger: none

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
#    Python38:
#      python.version: '3.8'
#    Python39:
#      python.version: '3.9'
#    Python310:
#      python.version: '3.10'
    Python311:
      python.version: '3.11'


steps:
- checkout: self
  clean: true
  persistCredentials: true
  fetchTags: true

- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install poetry
    poetry install
  displayName: 'Install dependencies'

- script: |    
    poetry config repositories.test-pypi https://test.pypi.org/legacy/
    poetry config pypi-token.test-pypi  $(TestPyPI-Token)
    poetry config pypi-token.pypi $(PyPI-Token)
    
    poetry version patch
    poetry build
    tree
    
#    poetry publish -r test-pypi
#    poetry publish
  displayName: 'Publish to PyPi'

- script: |
    git status
    git add pyproject.toml
    git commit -m "Bump the version"
    git status
  displayName: 'Update git'